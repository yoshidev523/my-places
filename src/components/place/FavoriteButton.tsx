'use client';

import { useState, useTransition } from 'react';
import { addToFavorites, removeFromFavorites } from '@/app/actions/favorites';

/**
 * „ÅäÊ∞ó„Å´ÂÖ•„Çä„Éú„Çø„É≥„ÅÆ„Éó„É≠„Éë„ÉÜ„Ç£
 */
export interface FavoriteButtonProps {
  placeId: string;
  isFavorite: boolean;
}

/**
 * „ÅäÊ∞ó„Å´ÂÖ•„Çä„Éú„Çø„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÔºà„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÔºâ
 */
export function FavoriteButton({ placeId, isFavorite }: FavoriteButtonProps) {
  const [isCurrentlyFavorite, setIsCurrentlyFavorite] = useState(isFavorite);
  const [isPending, startTransition] = useTransition();

  const handleToggleFavorite = () => {
    startTransition(async () => {
      try {
        if (isCurrentlyFavorite) {
          const result = await removeFromFavorites(placeId);
          if (result.success) {
            setIsCurrentlyFavorite(false);
          }
        } else {
          const result = await addToFavorites(placeId);
          if (result.success) {
            setIsCurrentlyFavorite(true);
          }
        }
      } catch (error) {
        console.error('Favorite toggle error:', error);
      }
    });
  };

  return (
    <button
      onClick={handleToggleFavorite}
      disabled={isPending}
      className={`p-2 rounded-full transition-colors ${
        isPending 
          ? 'opacity-50 cursor-not-allowed' 
          : 'hover:bg-gray-100'
      } ${
        isCurrentlyFavorite 
          ? 'text-red-500' 
          : 'text-gray-400 hover:text-red-500'
      }`}
      title={isCurrentlyFavorite ? '„ÅäÊ∞ó„Å´ÂÖ•„Çä„Åã„ÇâÂâäÈô§' : '„ÅäÊ∞ó„Å´ÂÖ•„Çä„Å´ËøΩÂä†'}
    >
      {isCurrentlyFavorite ? '‚ù§Ô∏è' : 'ü§ç'}
    </button>
  );
} 